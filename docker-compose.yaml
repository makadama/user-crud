version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    ports:
      - "3000:3000"  
    volumes:
      - ./frontend:/app  
      - /app/node_modules 
    environment:
      - CHOKIDAR_USEPOLLING=true 
    depends_on:
      - backend
    stdin_open: true  
    tty: true 
    restart: always

  backend:
    container_name: backend
    image: backend
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app  
      - /app/node_modules 
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres?schema=public
      - JWT_SECRET=my_secret
      - HOST=0.0.0.0
    depends_on:
      db:
        condition: service_healthy  

  db:
    container_name: db
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]  
      interval: 5s
      retries: 5
      timeout: 5s

volumes:
  pgdata: {}
